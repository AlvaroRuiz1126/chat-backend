{"version":3,"sources":["types/types.js","context/chat/chatReducer.js","context/chat/ChatContext.js","helpers/fetch.js","auth/AuthContext.js","context/socketContext.js","hooks/useScoket.js","helpers/scrollToBottom.js","components/ChatSelect.js","components/Searchbox.js","components/SidebarChatItem.js","components/Sidebar.js","components/InboxPeople.js","helpers/date.js","components/IncomingMessage.js","components/OutgoingMessage.js","components/SendMessage.js","components/Messages.js","pages/ChatPage.js","pages/LoginPAge.js","pages/RegisterPage.js","routers/AuthRouter.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","ChatApp.js","reportWebVitals.js","index.js"],"names":["types","initialState","uid","activeChat","userList","messages","chatReducer","state","action","type","payload","de","para","ChatContext","createContext","ChatProvider","children","useReducer","chatState","dispatch","Provider","value","URL_BASE","process","fetchWithoutToken","endpoint","data","a","method","url","fetch","resp","json","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","AuthContext","checking","logged","name","email","AuthProvider","useState","auth","setAuth","useContext","login","password","ok","setItem","user","nombre","register","verifyToken","useCallback","logout","removeItem","SocketContext","SocketProvider","serverPath","socket","setSocket","online","setOnline","socketConnect","socketTemp","io","connect","transports","autoConnect","forceNew","query","socketDisconnect","disconnect","useEffect","connected","on","useSocket","users","message","id","animateScroll","scrollToBottom","containerId","duration","ChatSelect","className","Searchbox","onClick","SidebarChatItem","src","alt","Sidebar","filter","map","InboxPeople","hourMonth","date","moment","format","IncomingMessage","createdAt","OutgoingMessage","SendMessage","setMessage","onSubmit","event","preventDefault","length","emit","placeholder","onChange","target","Messages","_id","ChatPage","LoginPage","rememberme","form","setForm","remembermeEmail","Swal","fire","checked","readOnly","to","disabled","RegisterPage","e","msg","AuthRouter","exact","path","component","PublicRoute","isAuthenticated","Component","rest","props","PrivateRoute","AppRouter","locale","ChatApp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.257840f2.chunk.js","sourcesContent":["export const types = {\n    usersLoaded: '[Chat] Usuarios Cargados',\n    activeChat: '[Chat] Activar chat',\n    newMessage: '[Chat] Nuevo mensaje',\n    loadMessages: '[Chat] Cargar mensajes',\n    cleanMessages: '[Chat] Limpiar chat'\n};","import { types } from \"../../types/types\";\n\nconst initialState = {\n    uid: '',\n    activeChat: null,\n    userList: [],\n    messages: [],\n};\n\nexport const chatReducer = (state, action) => {\n    switch (action.type) {\n        case types.usersLoaded:\n            return {\n                ...state,\n                userList: [...action.payload],\n            };\n\n        case types.activeChat:\n            if(state.activeChat === action.payload) return state;\n\n            return {\n                ...state,\n                activeChat: action.payload,\n                messages: [],\n            };\n\n        case types.newMessage:\n            if(state.activeChat === action.payload.de || state.activeChat === action.payload.para) {\n                return {\n                    ...state,\n                    messages: [...state.messages, action.payload]\n                };\n            }else{\n                return state;\n            }\n\n        case types.loadMessages:\n            return {\n                ...state,\n                messages: [...action.payload]\n            }\n\n        case types.cleanMessages:\n            return initialState;\n\n        default:\n            return state;\n    }\n};","import React, { createContext, useReducer } from \"react\";\nimport { chatReducer } from \"./chatReducer\";\n\nexport const ChatContext = createContext();\n\nconst initialState = {\n    uid: '',\n    activeChat: null,\n    userList: [],\n    messages: [],\n};\n\nexport const ChatProvider = ({children}) => {\n    const [chatState, dispatch] = useReducer(chatReducer, initialState);\n    \n    return (\n        <ChatContext.Provider value={{chatState, dispatch}}>\n            {children}\n        </ChatContext.Provider>\n    )\n}\n","const URL_BASE = process.env.REACT_APP_API_URL;\n\nexport const fetchWithoutToken = async(endpoint, data, method = 'GET') => {\n    const url = `${URL_BASE}/${endpoint}`;\n\n    if(method === 'GET'){\n        const resp = await fetch(url);\n        return await resp.json();\n    }else{\n        const resp = await fetch(url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify(data),\n        });\n\n        return await resp.json();\n    }\n};\n\nexport const fetchWithToken = async(endpoint, data, method = 'GET') => {\n    const url = `${URL_BASE}/${endpoint}`;\n    const token = localStorage.getItem('token');\n\n    if(method === 'GET'){\n        const resp = await fetch(url, {\n            headers: {\n                'x-token': token\n            },\n        });\n        \n        return await resp.json();\n    }else{\n        const resp = await fetch(url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token,\n            },\n            body: JSON.stringify(data),\n        });\n\n        return await resp.json();\n    }\n};","import React, { createContext, useCallback, useContext, useState } from 'react';\nimport { ChatContext } from '../context/chat/ChatContext';\nimport { types } from '../types/types';\nimport { fetchWithoutToken, fetchWithToken } from './../helpers/fetch';\n\nexport const AuthContext = createContext();\n\nconst initialState = {\n    uid: null,\n    checking: true,\n    logged: false,\n    name: null,\n    email: null,\n};\n\n\nexport const AuthProvider = ({children}) => {\n    const [auth, setAuth] = useState(initialState);\n    const {dispatch} = useContext(ChatContext);\n\n    const login = async (email, password) => {\n        const resp = await fetchWithoutToken('login', {email, password}, 'POST');\n        //console.log(resp);\n\n        if(resp.ok){\n            localStorage.setItem('token', resp.token);\n\n            setAuth({\n                uid: resp.user.uid,\n                checking: false,\n                logged: true,\n                name: resp.user.nombre,\n                email: resp.user.email,\n            });\n        }\n\n        return resp.ok;\n    };\n\n    const register = async (nombre, email, password) => {\n        const resp = await fetchWithoutToken('login/new', {nombre, email, password}, 'POST');\n        //console.log(resp);\n\n        if(resp.ok){\n            localStorage.setItem('token', resp.token);\n\n            setAuth({\n                uid: resp.user.uid,\n                checking: false,\n                logged: true,\n                name: resp.user.nombre,\n                email: resp.user.email,\n            });\n        }\n\n        return resp;\n    };\n\n    const verifyToken = useCallback(async () => {\n        const token = localStorage.getItem('token');\n\n        if (!token) {\n            setAuth({\n                uid: null,\n                checking: false,\n                logged: false,\n                name: null,\n                email: null,\n            });\n\n            return false;\n        }\n        \n        const resp = await fetchWithToken('login/renew');\n\n        if(resp.ok){\n            localStorage.setItem('token', resp.token);\n\n            setAuth({\n                uid: resp.user.uid,\n                checking: false,\n                logged: true,\n                name: resp.user.nombre,\n                email: resp.user.email,\n            });\n\n            return true;\n        }else {\n            setAuth({\n                uid: null,\n                checking: false,\n                logged: false,\n                name: null,\n                email: null,\n            });\n\n            return false;\n        }\n    }, []);\n\n    const logout = () => {\n        localStorage.removeItem('token');\n\n        setAuth({\n            checking: false,\n            logged: false,\n        });\n\n        dispatch({\n            type: types.cleanMessages\n        });\n    };\n\n    return (\n        <AuthContext.Provider value={{login, register, verifyToken, logout, auth}}>\n            {children}\n        </AuthContext.Provider>\n    )\n}\n","import React, { createContext, useContext, useEffect } from \"react\";\nimport { AuthContext } from \"../auth/AuthContext\";\nimport { scrollToBottomAnimated } from \"../helpers/scrollToBottom\";\nimport { useSocket } from \"../hooks/useScoket\";\nimport { types } from \"../types/types\";\nimport { ChatContext } from \"./chat/ChatContext\";\n\nexport const SocketContext = createContext();\n\nexport const SocketProvider = ({children}) => {\n    // const {socket, online, socketConnect, socketDisconnect} = useSocket('http://localhost:8080');\n    const {socket, online, socketConnect, socketDisconnect} = useSocket('https://socket-chatreact.herokuapp.com');\n    const {auth} = useContext(AuthContext);\n    const {dispatch} = useContext(ChatContext);\n\n    useEffect(() => {\n        if(auth.logged){\n            socketConnect();\n        }\n    }, [auth, socketConnect]);\n\n    useEffect(() => {\n        if(!auth.logged){\n            socketDisconnect();\n        }\n    }, [auth, socketDisconnect]);\n\n    useEffect(() => {\n        socket?.on('lista-usuarios', (users) => {\n            dispatch({\n                type: types.usersLoaded,\n                payload: users,\n            });\n        })\n    }, [socket, dispatch]);\n\n    useEffect(() => {\n        socket?.on('mensaje-personal', (message) => {\n            dispatch({\n                type: types.newMessage,\n                payload: message,\n            });\n            \n            //scroll al final del chat\n            scrollToBottomAnimated('messages');\n        });\n\n    }, [socket, dispatch]);\n\n    return (\n        <SocketContext.Provider value={{socket, online}}>\n            {children}\n        </SocketContext.Provider>\n    );\n};","import { useCallback, useEffect, useState } from \"react\";\nimport { io } from \"socket.io-client\";\n\nexport const useSocket = (serverPath) => {\n    // const socket = useMemo(() => io.connect(serverPath, {\n    //     transports: ['websocket']\n    // }), [serverPath]);\n    const [socket, setSocket] = useState(null);\n    const [online, setOnline] = useState(false);\n\n    const socketConnect = useCallback(() => {\n        const token = localStorage.getItem('token');\n\n        const socketTemp = io.connect(serverPath, { \n            transports: ['websocket'],\n            autoConnect: true,\n            forceNew: true,\n            //para mandar la data en la conexion del socket\n            query: {\n                'x-token': token\n            },\n        });\n\n        setSocket(socketTemp);\n    }, [serverPath] );\n\n    const socketDisconnect = useCallback(() => {\n        socket?.disconnect();\n    }, [socket] );\n\n    useEffect(() => {\n        //console.log(socket);\n        setOnline(socket?.connected);\n    }, [socket]);\n\n    useEffect(() => {\n        socket?.on('connect', () => {\n            setOnline(true);\n        });\n    }, [socket]);\n\n    useEffect(() => {\n        socket?.on('disconnect', () => {\n            setOnline(false);\n        });\n    }, [socket]);\n\n    return {\n        socket,\n        online,\n        socketConnect,\n        socketDisconnect\n    };\n};","import { animateScroll } from 'react-scroll';\n\nexport const scrollToBottom = (id) => {\n    animateScroll.scrollToBottom({\n        containerId: id,\n        duration: 0\n    });\n};\n\nexport const scrollToBottomAnimated = (id) => {\n    animateScroll.scrollToBottom({\n        containerId: id,\n        duration: 250\n    });\n};","import React from 'react';\n\nexport const ChatSelect = () => {\n    return (\n        <div className=\"middle-screen\">\n            <div className=\"alert-info\">\n                <hr />\n                <h3>Seleccione un Chat</h3>\n                <span>Para iniciar una conversacion</span>\n            </div>\n        </div>\n    );\n};","import React, { useContext } from 'react'\nimport { AuthContext } from '../auth/AuthContext';\n\nexport const Searchbox = () => {\n    const {auth, logout} = useContext(AuthContext);\n\n    return (\n        <>\n            {/* <!-- Searchbox inicio --> */}\n            < div className=\"headind_srch\" >\n                <div className=\"recent_heading mt-2\">\n                    <h4>{auth.name}</h4>\n                </div>\n                <div className=\"srch_bar\">\n                    <div className=\"stylish-input-group\">\n                        <button className=\"btn text-danger\" onClick={logout}>\n                            Salir\n                        </button>\n                    </div>\n                </div>\n            </div >\n            {/* <!-- Searchbox Fin --> */}\n        </>\n    );\n};","import React, { useContext } from 'react';\nimport { ChatContext } from '../context/chat/ChatContext';\nimport { fetchWithToken } from '../helpers/fetch';\nimport { scrollToBottom } from '../helpers/scrollToBottom';\nimport { types } from '../types/types';\n\nexport const SidebarChatItem = ({user}) => {\n    const {chatState, dispatch} = useContext(ChatContext);\n    const onClick = async () => {\n        dispatch({\n            type: types.activeChat,\n            payload: user.uid\n        });\n\n        //cargar los mensajes del chat\n        const resp = await fetchWithToken(`messages/${user.uid}`);\n\n        dispatch({\n            type: types.loadMessages,\n            payload: resp.messages,\n        });\n\n        scrollToBottom('messages');\n    };\n\n    return (\n        <>\n            {/* <!-- conversación activa inicio --> */}\n            <div className={`chat_list ${(user.uid === chatState.activeChat) && 'active_chat'}`} onClick={onClick}>\n                <div className=\"chat_people\">\n                    <div className=\"chat_img\">\n                        <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\" />\n                    </div>\n                    <div className=\"chat_ib\">\n                        <h5>{user.nombre}</h5>\n                        {\n                            user.online ? <span className=\"text-success\">Online</span> : <span className=\"text-danger\">Offline</span>\n                        }\n                    </div>\n                </div>\n            </div>\n            {/* <!-- conversación activa Fin --> */}\n        </>\n    );\n};","import React, { useContext } from 'react';\nimport { AuthContext } from '../auth/AuthContext';\nimport { ChatContext } from '../context/chat/ChatContext';\nimport { SidebarChatItem } from './SidebarChatItem';\n\nexport const Sidebar = () => {\n    const {chatState} = useContext(ChatContext);\n    const {auth} = useContext(AuthContext);\n\n    return (\n        <>\n            {/* <!-- Sidebar inicio --> */}\n            <div className=\"inbox_chat\">\n\n                {\n                    //con el filter primero se hace un filtro del arreglo de los usuarios con el id diferente al que se loguea\n                    //y luego ese arreglo que queda es el que se recorre con el map\n                    chatState.userList\n                    .filter(user => user.uid !== auth.uid)\n                    .map((user) => (\n                        <SidebarChatItem \n                            key={user.uid}\n                            user={user}\n                        />\n                    ))\n                }\n\n                {/* <!-- Espacio extra para scroll --> */}\n                <div className=\"extra_space\"></div>\n\n            </div>\n            {/* <!-- Sidebar Fin --> */}\n        </>\n    );\n};","import React from 'react';\nimport { Searchbox } from './Searchbox';\nimport { Sidebar } from './Sidebar';\n\nexport const InboxPeople = () => {\n    return (\n        <>\n            {/* <!-- Inbox people inicio --> */}\n            < div className=\"inbox_people\" >\n\n                <Searchbox />\n\n                <Sidebar />\n\n            </div >\n            {/* <!-- Inbox people Fin --> */}\n        </>\n    );\n};","import moment from 'moment';\n\nexport const hourMonth = (date) => {\n    const today = moment(date);\n\n    return today.format('HH:mm a | MMMM Do')\n};","import React from 'react';\nimport { hourMonth } from '../helpers/date';\n\nexport const IncomingMessage = ({message}) => {\n\n    return (\n        <>\n            {/* <!-- Mensaje recibido Inicio --> */}\n            <div className=\"incoming_msg\">\n                <div className=\"incoming_msg_img\">\n                    <img src=\"https://ptetutorials.com/images/user-profile.png\" alt=\"sunil\" />\n                </div>\n                <div className=\"received_msg\">\n                    <div className=\"received_withd_msg\">\n                        <p>{message.message}</p>\n                        <span className=\"time_date\">{hourMonth(message.createdAt)}</span>\n                    </div>\n                </div>\n            </div>\n            {/* <!-- Mensaje recibido Fin --> */}\n        </>\n    );\n};","import React from 'react';\nimport { hourMonth } from '../helpers/date';\n\nexport const OutgoingMessage = ({message}) => {\n    return (\n        <>\n            {/* <!-- Mensaje enviado inicio --> */}\n            <div className=\"outgoing_msg\">\n                <div className=\"sent_msg\">\n                    <p>{message.message}</p>\n                    <span className=\"time_date\">{hourMonth(message.createdAt)}</span>\n                </div>\n            </div>\n            {/* <!-- Mensaje enviado inicio --> */}\n        </>\n    );\n};","import React, { useContext, useState } from 'react';\nimport { AuthContext } from '../auth/AuthContext';\nimport { ChatContext } from '../context/chat/ChatContext';\nimport { SocketContext } from '../context/socketContext';\n\nexport const SendMessage = () => {\n    const [message, setMessage] = useState('');\n    const {socket} = useContext(SocketContext);\n    const {auth} = useContext(AuthContext);\n    const {chatState} = useContext(ChatContext);\n\n    const onChange = ({target}) => {\n        setMessage(target.value); \n    };\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n\n        if(message.length === 0) return;\n\n        setMessage('');\n\n        socket.emit('mensaje-personal', {\n            de: auth.uid,\n            para: chatState.activeChat,\n            message,\n        });\n    };\n\n    return (\n        <form onSubmit={onSubmit}>\n            {/* <!-- Enviar mensaje Inicio --> */}\n            <div className=\"type_msg row\">\n                <div className=\"input_msg_write col-sm-9\">\n                    <input type=\"text\" className=\"write_msg\" placeholder=\"Mensaje...\" value={message} onChange={onChange} />\n                </div>\n                <div className=\"col-sm-3 text-center\">\n                    <button className=\"msg_send_btn mt-3\" type=\"submit\">\n                        enviar\n                    </button>\n                </div>\n            </div>\n            {/* <!-- Enviar mensaje Fin --> */}\n        </form>\n    );\n};","import React, { useContext } from 'react';\nimport { AuthContext } from '../auth/AuthContext';\nimport { ChatContext } from '../context/chat/ChatContext';\nimport { IncomingMessage } from './IncomingMessage';\nimport { OutgoingMessage } from './OutgoingMessage';\nimport { SendMessage } from './SendMessage';\n\nexport const Messages = () => {\n    const {chatState} = useContext(ChatContext);\n    const {auth} = useContext(AuthContext);\n\n    return (\n        <>\n            {/* <!-- Chat inicio --> */}\n            <div className=\"mesgs\">\n\n                {/* <!-- Historia inicio --> */}\n                <div className=\"msg_history\" id=\"messages\">\n\n                    {chatState.messages.map(message => (\n                        (message.para === auth.uid)\n                            ? <IncomingMessage key={message._id} message={message} />\n                            : <OutgoingMessage key={message._id} message={message} />\n                    ))}\n\n                </div>\n                {/* <!-- Historia Fin --> */}\n\n                <SendMessage />\n\n            </div>\n            {/* <!-- Chat Fin --> */}\n        </>\n    );\n};\n","import React, { useContext } from 'react';\nimport { ChatSelect } from '../components/ChatSelect';\nimport { InboxPeople } from '../components/InboxPeople';\nimport { ChatContext } from '../context/chat/ChatContext';\nimport { Messages } from '../components/Messages';\nimport '../css/chat.css';\n\nexport const ChatPage = () => {\n    const {chatState} = useContext(ChatContext);\n    return (\n        <div className=\"messaging\">\n            <div className=\"inbox_msg\">\n\n                <InboxPeople />\n\n                {(chatState.activeChat)\n                    ? <Messages />\n                    : <ChatSelect />\n                }\n                \n                \n\n            </div>\n        </div>\n    );\n};","import React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { AuthContext } from '../auth/AuthContext';\n\nexport const LoginPage = () => {\n    const {login} = useContext(AuthContext);\n    const [form, setForm] = useState({\n        email: 'test@email.com',\n        password: '123456',\n        rememberme: false\n    });\n\n    useEffect(() => {\n        const remembermeEmail = localStorage.getItem('email');\n\n        if(remembermeEmail){\n            //se escribe de esta manea para evitar el warning de la dependencia faltante que es form\n            setForm((form) => ({\n                ...form,\n                rememberme: true,\n                email: remembermeEmail,\n            }));\n        }\n    }, []);\n\n    const onChange = ({target}) => {\n        const {name, value} = target;\n        //console.log(name, value);\n        setForm({\n            ...form,\n            //las llaves cuadradas sirven para que use la propiedad name y no cree un nuevo campo en el objeto\n            [name]: value\n        });\n    };\n\n    const toggleCheck = () => {\n        setForm({\n            ...form,\n            rememberme: !form.rememberme,\n        });\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        //console.log(form);\n\n        if(form.rememberme){\n            localStorage.setItem('email', form.email);\n        }else{\n            localStorage.removeItem('email');\n        }\n\n        const { email, password } = form;\n        const ok = await login(email, password);\n\n        if(!ok){\n            Swal.fire('Error', 'Verifique el usuario y contraseña', 'error');\n        }\n    };\n\n    const allOK = () => {\n        return (form.email.length >0 && form.password > 0) ? true : false;\n    };\n\n    return (\n        <form className=\"login100-form validate-form flex-sb flex-w\" onSubmit={onSubmit}>\n            <span className=\"login100-form-title mb-3\">\n                Chat - Ingreso\n\t\t\t</span>\n\n            <div className=\"wrap-input100 validate-input mb-3\">\n                <input className=\"input100\" type=\"email\" name=\"email\" placeholder=\"Email\" value={form.email} onChange={onChange} />\n                <span className=\"focus-input100\"></span>\n            </div>\n\n\n            <div className=\"wrap-input100 validate-input mb-3\">\n                <input className=\"input100\" type=\"password\" name=\"password\" placeholder=\"Password\" value={form.password} onChange={onChange} />\n                <span className=\"focus-input100\"></span>\n            </div>\n\n            <div className=\"row mb-3\">\n                <div \n                    className=\"col\"\n                    //se define aca porque es por el template que no permite hacer click sobre el check\n                    onClick={() => toggleCheck()}\n                >\n                    <input className=\"input-checkbox100\" id=\"ckb1\" type=\"checkbox\" name=\"rememberme\" checked={form.rememberme} readOnly />\n                    <label className=\"label-checkbox100\">\n                        Recordarme\n\t\t\t\t\t</label>\n                </div>\n\n                <div className=\"col text-right\">\n                    <Link to=\"/auth/register\" className=\"txt1\">\n                        Nueva cuenta?\n\t\t\t\t\t</Link>\n                </div>\n            </div>\n\n            <div className=\"container-login100-form-btn m-t-17\">\n                <button\n                    type='submit'\n                    className=\"login100-form-btn\"\n                    disabled={!allOK()}\n                >\n                    Ingresar\n\t\t\t\t</button>\n            </div>\n\n        </form>\n    );\n};","import React, { useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport Swal from 'sweetalert2';\nimport { AuthContext } from '../auth/AuthContext';\n\nexport const RegisterPage = () => {\n    const {register} = useContext(AuthContext);\n    const [form, setForm] = useState({\n        name: '',\n        email: '',\n        password: '',\n    });\n\n    const onChange = ({target}) => {\n        const {name, value} = target;\n\n        setForm({\n            ...form,\n            [name]: value,\n        });\n    };\n\n    const onSubmit = async (e) => {\n        e.preventDefault();\n\n        const resp = await register(form.name, form.email, form.password);\n\n        if(resp.ok){\n            Swal.fire('Registrado', 'El usuario ha sido registrado', 'success');\n        }else{\n            Swal.fire('Error', resp.msg, 'error');\n        }\n    };\n\n    const allOK = () => {\n        return (form.name.length > 0 && form.email.length > 0 && form.password > 0) ? true : false;\n    };\n\n    return (\n        <form className=\"login100-form validate-form flex-sb flex-w\" onSubmit={onSubmit}>\n            <span className=\"login100-form-title mb-3\">\n                Chat - Registro\n\t\t\t</span>\n\n            <div className=\"wrap-input100 validate-input mb-3\">\n                <input className=\"input100\" type=\"text\" name=\"name\" placeholder=\"Nombre\" value={form.name} onChange={onChange} />\n                <span className=\"focus-input100\"></span>\n            </div>\n\n\n            <div className=\"wrap-input100 validate-input mb-3\">\n                <input className=\"input100\" type=\"email\" name=\"email\" placeholder=\"Email\" value={form.email} onChange={onChange} />\n                <span className=\"focus-input100\"></span>\n            </div>\n\n\n            <div className=\"wrap-input100 validate-input mb-3\">\n                <input className=\"input100\" type=\"password\" name=\"password\" placeholder=\"Password\" value={form.password} onChange={onChange} />\n                <span className=\"focus-input100\"></span>\n            </div>\n\n            <div className=\"row mb-3\">\n                <div className=\"col text-right\">\n                    <Link to=\"/auth/login\" className=\"txt1\">\n                        Ya tienes cuenta?\n\t\t\t\t\t</Link>\n                </div>\n            </div>\n\n            <div className=\"container-login100-form-btn m-t-17\">\n                <button\n                    type=\"submit\"\n                    className=\"login100-form-btn\"\n                    disabled={!allOK()}\n                >\n                    Crear cuenta\n\t\t\t\t</button>\n            </div>\n\n        </form>\n    );\n};","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router';\nimport { LoginPage } from '../pages/LoginPAge';\nimport { RegisterPage } from '../pages/RegisterPage';\nimport './../css/login-register.css';\n\nexport const AuthRouter = () => {\n    return (\n        <div className=\"limiter\">\n            <div className=\"container-login100\">\n                <div className=\"wrap-login100 p-t-50 p-b-90\">\n                    <Switch>\n                        <Route exact path=\"/auth/login\" component={LoginPage} />\n                        <Route exact path=\"/auth/register\" component={RegisterPage} />\n\n                        <Redirect to=\"/auth/login\" />\n                    </Switch>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Redirect, Route } from 'react-router';\n\nexport const PublicRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    return (\n        <Route {...rest}\n            component={(props) => (\n                (!isAuthenticated)\n                    ? <Component {...props} />\n                    : <Redirect to='/' />\n            )} \n        />\n    );\n};","import React from 'react';\nimport { Redirect, Route } from 'react-router';\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    return (\n        <Route {...rest}\n            component={(props) => (\n                (isAuthenticated)\n                    ? <Component {...props} />\n                    : <Redirect to='/auth/login' />\n            )} \n        />\n    );\n};","import React, { useContext, useEffect } from 'react';\nimport { ChatPage } from '../pages/ChatPage';\nimport { AuthRouter } from './AuthRouter';\nimport { AuthContext } from '../auth/AuthContext';\nimport { PublicRoute } from './PublicRoute';\nimport { PrivateRoute } from './PrivateRoute';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Redirect\n} from \"react-router-dom\";\n\nexport const AppRouter = () => {\n    const {auth, verifyToken} = useContext(AuthContext);\n\n    useEffect(() => {\n        verifyToken();\n    }, [verifyToken]);\n\n    if(auth.checking){\n        return <h1>Espere Por Favor</h1>;\n    }\n\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute path=\"/auth\" component={AuthRouter} isAuthenticated={auth.logged} />\n                    <PrivateRoute exact path=\"/\" component={ChatPage} isAuthenticated={auth.logged} />\n\n                    <Redirect to=\"/\" />\n                </Switch>\n            </div>\n        </Router>\n    );\n};","import React from 'react';\nimport { AuthProvider } from './auth/AuthContext';\nimport { ChatProvider } from './context/chat/ChatContext';\nimport { SocketProvider } from './context/socketContext';\nimport { AppRouter } from './routers/AppRouter';\nimport moment from 'moment';\n//para cambiar la fecha al formato español\nimport 'moment/locale/es';\nmoment.locale('es');\n\nexport const ChatApp = () => {\n    return (\n        <ChatProvider>\n            <AuthProvider>\n                <SocketProvider>\n                    <AppRouter />\n                </SocketProvider>\n            </AuthProvider>\n        </ChatProvider>\n    );\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ChatApp } from './ChatApp';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ChatApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}